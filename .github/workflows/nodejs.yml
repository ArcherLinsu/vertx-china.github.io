name: Node.js CI

on:
  push:
    branches: [ disk-space ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # put gradle user home on another volume so we have more space on /
      GRADLE_USER_HOME: /mnt/gradle

    steps:
      # Delete tools not needed for the build process
      # This saves about 4GB of disk space
      - name: Delete unnecesary tools
        run: |
          df -h /
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf $AGENT_TOOLSDIRECTORY
          df -h /

      # Prepare gradle user home
      - run: |
          sudo mkdir $GRADLE_USER_HOME
          sudo chmod uog+rwx $GRADLE_USER_HOME

      - run: |
          df -h

      - uses: actions/checkout@v2

      - run: |
          du -sh *
          df -h

      - name: Setup Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - run: |
          du -sh *
          df -h

      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - run: |
          du -sh *
          df -h

      - uses: actions/cache@v2
        with:
          path: .cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - run: |
          du -sh *
          df -h

      - run: npm ci
      - run: |
          du -sh *
          df -h
      - run: npm run update-docs
      - run: |
          du -sh *
          df -h
      - run: npm run build
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          du -sh *
          df -h

      # Remove files that have been used during build but that are not needed
      # anymore for the remainder of the workflow. This is necessary to save
      # disk space.
      - name: Cleanup temporary files
        run: |
          rm -rf docs/extracted
          rm -rf node_modules
          rm -rf public/docs
      - run: |
          du -sh *
          df -h

      - name: Prepare deployment on GitHub Pages
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/github
          cat >>~/.ssh/config <<EOL
          Host github.com
            HostName github.com
            IdentityFile ~/.ssh/github
            User git
          EOL
          chmod 700 ~/.ssh
          chmod -R 600 ~/.ssh/*
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

      - name: Clone current GitHub Pages repo
        run: git clone --depth 1 --single-branch --branch disk-space git@github.com:vertx-web-site/vertx-web-site.github.io.git
      - run: |
          du -sh *
          df -h

      - name: Clean output directory
        run: |
          cd vertx-web-site.github.io
          git rm -r -q --ignore-unmatch *
          touch .nojekyll
          echo vertx.io > CNAME
          cd ..
      - run: |
          du -sh *
          df -h

      - name: Copy build to output directory
        run: mv out/* vertx-web-site.github.io
      - run: |
          du -sh *
          df -h

      - name: Deploy to GitHub Pages
        run: |
          cd vertx-web-site.github.io
          git add -A
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -q -m "deploy: $GITHUB_REPOSITORY@$GITHUB_SHA"
          git push origin disk-space
          cd ..

      - run: |
          du -sh *
          df -h
