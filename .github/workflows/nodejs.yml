name: Node.js CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # put gradle user home on another volume so we have more space on /
      GRADLE_USER_HOME: /mnt/gradle

    steps:
      # Delete tools not needed for the build process
      # This saves about 4GB of disk space
      - name: Delete unnecesary tools
        run: |
          df -h /
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf $AGENT_TOOLSDIRECTORY
          df -h /

      # Prepare gradle user home
      - run: |
          sudo mkdir $GRADLE_USER_HOME
          sudo chmod uog+rwx $GRADLE_USER_HOME

      - uses: actions/checkout@v2

      - name: Setup gradle mirror
        run: |
          rm ./docs/gradle/wrapper/gradle-wrapper.properties
          mv ./docs/gradle/wrapper/gradle-wrapper2.properties ./docs/gradle/wrapper/gradle-wrapper.properties
      # Remove more unnecessary tools. We should have about 52GB of free disk space after this.
      # See https://github.com/apache/flink/blob/master/tools/azure-pipelines/free_disk_space.sh
      - name: Free up more disk space
        run: |
          .github/workflows/free_disk_space.sh

      - name: Setup Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - uses: actions/cache@v2
        with:
          path: .cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - run: |
          du -sh *
          df -h / /mnt

      - run: npm ci

      # Download and extract docs but only extract API docs of latest version.
      # We will copy them to the target repository later. This saves disk
      # space and time.
      - run: npm run update-docs -- extractDocs extractApidocsLatest
      - run: |
          du -sh *
          df -h / /mnt

      - run: npm run build
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          du -sh *
          df -h / /mnt

      # Remove files that have been used during build but that are not needed
      # anymore for the remainder of the workflow. This is necessary to save
      # disk space.
      - name: Cleanup temporary files
        run: |
          rm -rf docs/extracted
          rm -rf node_modules
          rm -rf public/docs
      - run: |
          du -sh *
          df -h / /mnt

      - name: Prepare deployment on GitHub Pages
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/github
          cat >>~/.ssh/config <<EOL
          Host github.com
            HostName github.com
            IdentityFile ~/.ssh/github
            User git
          EOL
          chmod 700 ~/.ssh
          chmod -R 600 ~/.ssh/*
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

      - name: Clone current GitHub Pages repo
        run: git clone --depth 1 --single-branch --branch master git@github.com:vertx-china/vertx-china.github.io.git
      - run: |
          du -sh *
          df -h / /mnt

      - name: Clean output directory
        run: |
          cd vertx-china.github.io
          git rm -r -q --ignore-unmatch *
          touch .nojekyll
          echo vertx.io > CNAME
          cd ..

      - name: Copy build to output directory
        run: mv out/* vertx-china.github.io

      - name: Extract remaining API docs directly into output directory
        run: npm run update-docs -- -PextractApidocsTargetDir=$(pwd)/vertx-china.github.io/docs extractApidocsVersions
      - run: |
          du -sh *
          df -h / /mnt

      - name: Deploy to GitHub Pages
        run: |
          cd vertx-china.github.io
          git add -A
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git commit -q -m "deploy: $GITHUB_REPOSITORY@$GITHUB_SHA"
          git push origin master
          cd ..
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    strategy:
      matrix:
        include:
          - step: Gitee Pages
            repo-url: git@gitee.com:vertx-china/vertx-china.git
          - step: Coding.net
            repo-url: git@e.coding.net:lippen/cn.vertx.tk.git
    name: Deploy to ${{ matrix.step }}
    needs: build
    steps:
      - name: Clone current GitHub Pages repo
        run: git clone --depth 1 https://github.com/vertx-china/vertx-china.github.io.git

      - name: Clean output directory
        run: |
          rm -rf vertx-china.github.io/.git
          rm vertx-china.github.io/.nojekyll
          rm -rf vertx-china.github.io/docs/apidocs/*
          rm -rf vertx-china.github.io/docs/**/apidocs/*

      - name: Deploy to ${{ matrix.step }}
        uses: actionhub/workflows/git-deploy@v1
        with:
          ssh-key: ${{ secrets.GITEE_TOKEN }}
          src-dir: vertx-china.github.io
          branch: master
          repo-url: ${{ matrix.repo-url }}
          user-name: okou19900722
          user-email: 512058895@qq.com
          commit-message: publish
          force-orphan: true

  refresh:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Refresh Gitee Pages
        uses: actionhub/gitee-pages@v1
        with:
          username: "okou19900722"
          password: ${{ secrets.GITEE_PASSWORD }}
          repository: "https://gitee.com/vertx-china/vertx-china"
          branch: "master"
          directory: ""
          https: 'true'
#         env:
#           RUNNER_DEBUG: 1
